{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Person","props","person","name","number","onClick","deletePerson","Filter","value","onChange","PersonForm","onSubmit","onNameChange","onNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","startsWith","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchCond","setSearch","setMessage","useEffect","personService","initialPersons","filtered","filter","toUpperCase","checkIfNameNotExists","find","event","target","preventDefault","original","newPerson","returnedPerson","concat","setTimeout","window","confirm","map","catch","error","Persons","key","removePerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab12e104.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ( props ) => {\r\n    return (\r\n        <ul>\r\n        {props.person.name} {props.person.number}\r\n        <button onClick={props.deletePerson}>delete</button>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\nreturn (\r\n    <div>\r\n    filter shown with\r\n    <input\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n    />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.onSubmit}>\r\n        <div>\r\n        name: \r\n            <input \r\n            value={props.name}\r\n            onChange={props.onNameChange}\r\n            />\r\n        </div>\r\n        <div>\r\n        number:\r\n            <input \r\n            value={props.number}\r\n            onChange={props.onNumberChange}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll, create, remove, update\r\n}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n\r\n    if (message.startsWith('Added')) {\r\n        return (\r\n            <div className=\"addPerson\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    if (message.startsWith('Deleted')) {\r\n        return (\r\n            <div className=\"removePerson\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    if (message.startsWith('Updated')) {\r\n        return (\r\n            <div className=\"numberChange\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    if (message.startsWith('Information')) {\r\n        return (\r\n            <div className=\"updateFailed\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    \r\n\r\n    return ''\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Persons from './Persons'\r\nimport Filter from './Filter'\r\nimport PersonForm from './PersonForm'\r\nimport personService from './../services/persons'\r\nimport './../index.css'\r\nimport Notification from './Notification'\r\n\r\nconst App = () => {\r\n  \r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ searchCond, setSearch ] = useState('')\r\n  const [ message, setMessage ] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService\r\n    .getAll()\r\n    .then(initialPersons => {\r\n      setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  const filtered = persons.filter(person => person.name.toUpperCase().startsWith(searchCond.toUpperCase()))\r\n  \r\n  const addNewName = (event) => {\r\n    event.preventDefault()\r\n    const original = persons.find(person => person.name === newName)\r\n    const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n    }\r\n    if (checkIfNameNotExists(newPerson.name)) {\r\n        personService\r\n        .create(newPerson)\r\n          .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewNumber(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(\r\n            `Added ${returnedPerson.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          }, 5000)\r\n        })\r\n    }\r\n    else {\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n          personService\r\n          .update(original.id, {...original, number : newNumber})\r\n          .then((returnedPerson) => {\r\n              setPersons(persons.map(person => person.name !== original.name ? person : returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setMessage(\r\n                `Updated number of ${returnedPerson.name}`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage('')\r\n              }, 5000)\r\n            })\r\n            .catch(error => {\r\n              setMessage(`Information of ${newName} has already been deleted from the server`)\r\n            })\r\n        }\r\n        setPersons(persons)\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n  }\r\n\r\n  const checkIfNameNotExists = (props) => {\r\n      const found = persons.find(person => person.name === props)\r\n      if (found) {\r\n          return false\r\n      }\r\n      return true\r\n  }\r\n\r\n  const removePerson = (id) => {\r\n    const person = persons.find( person => person.id === id)\r\n    if (window.confirm(`Delete ${person.name} ?` )) {\r\n      personService\r\n      .remove(id)\r\n      .then(() => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n        setMessage(\r\n          `Deleted ${person.name}`\r\n        )\r\n        setTimeout(() => {\r\n          setMessage('')\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSearchList = (event) => {\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter value={searchCond} onChange={handleSearchList}/>\r\n      <h3>Add a new</h3>\r\n      <PersonForm \r\n        onSubmit={addNewName}\r\n        name={newName}\r\n        onNameChange={handleNameChange}\r\n        number={newNumber}\r\n        onNumberChange={handleNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      {filtered.map((person) =>\r\n      <Persons\r\n      key={person.id}\r\n      person={person}\r\n      deletePerson={() => removePerson(person.id)} \r\n      />\r\n      )}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}